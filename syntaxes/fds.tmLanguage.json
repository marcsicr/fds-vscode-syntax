{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "FDS",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#tags"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#file"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.fds",
          "match": "^[.]+.*$"
        },
        {
          "name": "comment.line.double-slash.fds",
          "begin": "/[*]+",
          "end": "$"
        }
      ]
    },
    "file": {
      "patterns": [
        {
          "match": "(!x?file)\\s([\\w]+)\\s([@\\w]+)((\\s(dbs)[=]([\\w]+)))?",
          "captures": {
            "1": { "name": "support.function.fds" },
            "2": { "name": "variable.other.definition.fds" },
            "3": { "name": "entity.name.type.fds" }
          }
        },
        {
          "match": "(!access)\\s(by)?",
          "captures": {
            "1": { "name": "support.function.fds" },
            "2": { "name": "keyword.other.fds" }
          }
        }
      ]
    },

    "variables": {
      "patterns": [
        {
          "match": "(!temp|!constant)\\s([\\w^,]+),([.:'\\s\\w]*)?,(a\\d+|i\\d+|dc|m8|r8|d4),?([-.:#\\w]+)?",
          "captures": {
            "0": { "name": "meta.definition.variable" },
            "1": { "name": "support.function.fds" },
            "2": { "name": "variable.other.definition.fds" },
            "3": { "name": "string.unquoted.fds" },
            "4": { "name": "storage.type.primitive.fds" },
            "5": {
              "patterns": [
                {
                  "match": ",([\\w]+)",
                  "captures": {
                    "1": {
                      "name": "string.regexp.fds"
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "match": "^[+]([\\w^,]+),([.:'\\s\\w]*),?([.:#\\w]+)?",
          "captures": {
            "1": { "name": "variable.other.definition.fds" },
            "2": { "name": "string.unquoted.fds" },
            "3": {
              "patterns": [
                {
                  "match": "([-.:#\\w]+)",
                  "captures": {
                    "0": {
                      "name": "string.regexp.fds"
                    }
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.fds",
          "match": "\\b(if|else|do|then|endif|while|continue|done|for|switch|return|exit)\\b"
        },
        {
          "name": "keyword.operator",
          "match": "\\b(and|or)\\b"
        },
        {
          "name": "support.function.fds",
          "match": "(!window|!box|!heading|!init|!final)"
        },
        {
          "match": "(goto|gosub)\\s([\\w]+$)",
          "captures": {
            "1": { "name": "keyword.control.fds" },
            "2": { "name": "entity.name.tag.fds" }
          }
        }
      ]
    },
    "tags": {
      "patterns": [
        {
          "match": "^(\\w*)([\\t]|\\\\$)",
          "captures": { "1": { "name": "entity.name.tag.fds" } }
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.fds",
          "match": "\\b(_NSR|NEXT|BREAK)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.fds",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.fds",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.fds",
          "match": "'.*'",
          "patterns": [
            {
              "name": "constant.character.escape.fds",
              "match": "\\\\."
            }
          ]
        }
      ]
    }
  },

  "scopeName": "source.f"
}
